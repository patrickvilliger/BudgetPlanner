@page "/fetchdata"

<PageTitle>Budget forecast</PageTitle>

@using BudgetPlanner.Blazor.Data
@using VilligerElectronics.BudgetPlanner.Core.Budget
@inject BudgetService BudgetService

<h1>Budget forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (budgets == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Description</th>
                <th>Due Date</th>
                <th>Booked Date</th>
                <th>Ammount</th>
                <th>Tags</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var budget in budgets)
            {
                <tr>
                    <td>@budget.Description</td>
                    <td>@budget.DueDate.ToShortDateString()</td>
                    <td>@budget.BookingDate.ToShortDateString()</td>
                    <td>@budget.Ammount</td>
                    <td>@budget.Tags</td>
                    <td>
                        <button class="btn btn-danger" @onclick="() => RemoveBudget(budget.Id)">x</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<BudgetPosition>? budgets;

    protected override async Task OnInitializedAsync()
    {
        budgets = await BudgetService.GetAllBudgetPositions();
    }

    protected async Task RemoveBudget(string id)
    {
        BudgetService.RemoveById(id);
        budgets = await BudgetService.GetAllBudgetPositions();
    }
}
